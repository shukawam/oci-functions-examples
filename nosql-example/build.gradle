plugins {
    id("com.github.johnrengelman.shadow") version "7.1.2"
    id("io.micronaut.application") version "3.7.9"
}

version = "0.1"
group = "me.shukawam.fn"

repositories {
    mavenCentral()
}

dependencies {
    implementation("io.micronaut:micronaut-jackson-databind")
    implementation("io.micronaut.oraclecloud:micronaut-oraclecloud-sdk")
    implementation("jakarta.annotation:jakarta.annotation-api")
    runtimeOnly("org.slf4j:slf4j-simple")
    implementation("io.micronaut:micronaut-validation")

    testImplementation("io.micronaut:micronaut-http-client")

    // https://mvnrepository.com/artifact/com.oracle.oci.sdk/oci-java-sdk-common-httpclient
    implementation 'com.oracle.oci.sdk:oci-java-sdk-common-httpclient-jersey:3.15.0'
    // https://mvnrepository.com/artifact/com.oracle.oci.sdk/oci-java-sdk-common
    implementation ("com.oracle.oci.sdk:oci-java-sdk-common:3.15.0")
    // https://mvnrepository.com/artifact/com.oracle.oci.sdk/oci-java-sdk-nosql
    implementation ("com.oracle.oci.sdk:oci-java-sdk-nosql:3.15.0")
}


application {
    mainClass.set("me.shukawam.fn.Application")
}
java {
    sourceCompatibility = JavaVersion.toVersion("11")
    targetCompatibility = JavaVersion.toVersion("11")
}

tasks {
    dockerfileNative {
      args("-XX:MaximumHeapSizePercent=80")
    }
    dockerBuild {
        images = ["[REGION].ocir.io/[TENANCY]/[REPO]/$project.name:$project.version"]
    }

    dockerBuildNative {
        images = ["[REGION].ocir.io/[TENANCY]/[REPO]/$project.name-native:$project.version"]
    }
}
graalvmNative.toolchainDetection = false
graalvmNative {
    binaries.configureEach {
        buildArgs.add("--initialize-at-build-time=me.shukawam.fn")
    }
}
micronaut {
    runtime("oracle_function")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("me.shukawam.fn.*")
    }
}



